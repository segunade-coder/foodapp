"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv_1 = __importDefault(require("dotenv"));
dotenv_1.default.config();
const express_1 = __importDefault(require("express"));
require("express-async-errors");
const http_1 = __importDefault(require("http"));
const helmet_1 = __importDefault(require("helmet"));
const compression_1 = __importDefault(require("compression"));
const cors_1 = __importDefault(require("cors"));
const configOptions_1 = require("./configs/configOptions");
const path_1 = __importDefault(require("path"));
const routes_1 = __importDefault(require("./routes"));
const model_1 = require("./model");
const errorhandler_1 = require("./middlewares/errorhandler");
const logger_1 = __importDefault(require("./utils/logger"));
const app = (0, express_1.default)();
const server = http_1.default.createServer(app);
const PORT = process.env.PORT || 3000;
process.on("uncaughtException", (error) => {
    logger_1.default.error(error.message, { name: error.name, stack: error.stack });
    process.exit(1);
});
// express middlewarrrrrrrr
(0, model_1.model)();
app.set("trust proxy", 1);
app.use((0, cors_1.default)(configOptions_1.corsConfig));
app.use(express_1.default.static(path_1.default.resolve(__dirname, "./public")));
app.use("/images", express_1.default.static(path_1.default.resolve(__dirname, "./images")));
app.use(express_1.default.json());
app.use(express_1.default.urlencoded({ extended: false }));
app.use((0, helmet_1.default)());
app.use((0, compression_1.default)());
app.use(configOptions_1.sessionMiddleware);
app.use(routes_1.default);
app.use(errorhandler_1.errorHandler);
server.listen(PORT, () => logger_1.default.info(`Live on ${PORT}`));
